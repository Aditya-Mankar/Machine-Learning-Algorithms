#Multiple Linear Regression

#Predicting profit generated by a startup

#Import Libraries 
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

#Load dataset
dataset = pd.read_csv('50_Startups.csv')
x = dataset.iloc[:,:-1].values
y = dataset.iloc[:,4].values

#Encoding city column
from sklearn.preprocessing import LabelEncoder,OneHotEncoder
labelencoder_x = LabelEncoder()
x[:,3] = labelencoder_x.fit_transform(x[:,3])
onehotencoder = OneHotEncoder(categorical_features = [3])
x = onehotencoder.fit_transform(x).toarray()

#Avoiding dummy variable trap
x = x[:,1:]

#Splitting the dataset
from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test = train_test_split(x,y,test_size = 0.25,random_state = 0)

#Fitting the dataset
from sklearn.linear_model import LinearRegression
regressor = LinearRegression()
regressor = regressor.fit(x_train,y_train)

#Predicting values
y_pred = regressor.predict(x_test)

#Building optimal model using backward elimination

#adding dummy column
import statsmodels.formula.api as sm
x = np.append(arr = np.ones((50,1)).astype(int), values = x, axis = 1)

x_opt = x[:,[0,1,2,3,4,5]]
regressor_ols = sm.OLS(endog = y, exog = x_opt).fit()

x_opt = x[:,[0,1,3,4,5]]
regressor_ols = sm.OLS(endog = y, exog = x_opt).fit()

x_opt = x[:,[0,3,4,5]]
regressor_ols = sm.OLS(endog = y, exog = x_opt).fit()

x_opt = x[:,[0,3,5]]
regressor_ols = sm.OLS(endog = y, exog = x_opt).fit()

x_opt = x[:,[0,3]]
regressor_ols = sm.OLS(endog = y, exog = x_opt).fit()
regressor_ols.summary()














